<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>JavaScript on Lê Thị Huyền Trang</title>
    <link>https://huyentrang-3331.github.io/MyWebBlog/tags/javascript/</link>
    <description>Recent content in JavaScript on Lê Thị Huyền Trang</description>
    <generator>Hugo -- 0.150.0</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 20 Oct 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://huyentrang-3331.github.io/MyWebBlog/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Tối ưu hiệu năng JavaScript – Viết code nhanh hơn, mượt hơn và thông minh hơn</title>
      <link>https://huyentrang-3331.github.io/MyWebBlog/blog/10-performance-optimization/</link>
      <pubDate>Mon, 20 Oct 2025 00:00:00 +0000</pubDate>
      <guid>https://huyentrang-3331.github.io/MyWebBlog/blog/10-performance-optimization/</guid>
      <description>Khám phá các kỹ thuật tối ưu hiệu năng JavaScript: từ việc giảm thao tác DOM, tối ưu vòng lặp, caching, debouncing, đến lazy loading. Giúp website chạy nhanh và mượt hơn.</description>
    </item>
    <item>
      <title>Những tính năng nổi bật của ES6 – Viết JavaScript hiện đại và gọn gàng hơn</title>
      <link>https://huyentrang-3331.github.io/MyWebBlog/blog/09-es6-features/</link>
      <pubDate>Wed, 15 Oct 2025 00:00:00 +0000</pubDate>
      <guid>https://huyentrang-3331.github.io/MyWebBlog/blog/09-es6-features/</guid>
      <description>Khám phá các tính năng mới của ES6 như let/const, arrow function, template literals, destructuring, spread/rest, class, module... giúp code JavaScript hiện đại và dễ hiểu hơn.</description>
    </item>
    <item>
      <title>Xử lý lỗi trong JavaScript – Cách viết code an toàn và chuyên nghiệp</title>
      <link>https://huyentrang-3331.github.io/MyWebBlog/blog/08-error-handling/</link>
      <pubDate>Fri, 10 Oct 2025 00:00:00 +0000</pubDate>
      <guid>https://huyentrang-3331.github.io/MyWebBlog/blog/08-error-handling/</guid>
      <description>Học cách bắt lỗi, ném lỗi và xử lý bất đồng bộ với try...catch, throw, Promise và async/await trong JavaScript. Giúp code của bạn ổn định và dễ debug hơn.</description>
    </item>
    <item>
      <title>Fetch API trong JavaScript – Cách gọi API hiện đại và dễ hiểu nhất</title>
      <link>https://huyentrang-3331.github.io/MyWebBlog/blog/07-fetch-api/</link>
      <pubDate>Sun, 05 Oct 2025 00:00:00 +0000</pubDate>
      <guid>https://huyentrang-3331.github.io/MyWebBlog/blog/07-fetch-api/</guid>
      <description>Học cách sử dụng Fetch API trong JavaScript để gọi dữ liệu từ server, xử lý JSON, và làm việc với async/await một cách dễ hiểu và thực tế.</description>
    </item>
    <item>
      <title>DOM Manipulation trong JavaScript – Làm chủ giao diện web</title>
      <link>https://huyentrang-3331.github.io/MyWebBlog/blog/06-dom-manipulation/</link>
      <pubDate>Tue, 30 Sep 2025 00:00:00 +0000</pubDate>
      <guid>https://huyentrang-3331.github.io/MyWebBlog/blog/06-dom-manipulation/</guid>
      <description>Tìm hiểu cách thao tác với DOM trong JavaScript: chọn phần tử, thay đổi nội dung, thêm/xóa phần tử, và lắng nghe sự kiện để tạo ra trang web động.</description>
    </item>
    <item>
      <title>Từ khóa this trong JavaScript – Khi nào trỏ về đâu?</title>
      <link>https://huyentrang-3331.github.io/MyWebBlog/blog/05-this-trong-javascript/</link>
      <pubDate>Thu, 25 Sep 2025 00:00:00 +0000</pubDate>
      <guid>https://huyentrang-3331.github.io/MyWebBlog/blog/05-this-trong-javascript/</guid>
      <description>Hiểu sâu về cách hoạt động của từ khóa this trong JavaScript – tại sao nó thay đổi trong từng ngữ cảnh, và cách tránh lỗi khi dùng arrow function, callback hoặc class.</description>
    </item>
    <item>
      <title>Hoisting và Scope trong JavaScript – Hiểu sâu cách trình thông dịch hoạt động</title>
      <link>https://huyentrang-3331.github.io/MyWebBlog/blog/04-hoisting-va-scope/</link>
      <pubDate>Sat, 20 Sep 2025 00:00:00 +0000</pubDate>
      <guid>https://huyentrang-3331.github.io/MyWebBlog/blog/04-hoisting-va-scope/</guid>
      <description>Hoisting và Scope là nền tảng giúp bạn hiểu cách trình thông dịch JavaScript hoạt động. Bài viết này sẽ giúp bạn phân biệt var, let, const, phạm vi hàm, khối, và hiện tượng hoisting khi biên dịch mã JS.</description>
    </item>
    <item>
      <title>Promise và Async/Await trong JavaScript – Hiểu sâu về bất đồng bộ hiện đại</title>
      <link>https://huyentrang-3331.github.io/MyWebBlog/blog/03-promise-async-await/</link>
      <pubDate>Mon, 15 Sep 2025 00:00:00 +0000</pubDate>
      <guid>https://huyentrang-3331.github.io/MyWebBlog/blog/03-promise-async-await/</guid>
      <description>Promise và Async/Await là nền tảng của lập trình bất đồng bộ trong JavaScript. Bài viết này giúp bạn hiểu rõ cách hoạt động, chuỗi then(), lỗi thường gặp và cách viết code bất đồng bộ sạch, dễ đọc.</description>
    </item>
    <item>
      <title>Hiểu rõ về Closure trong JavaScript – Bí mật đằng sau sức mạnh của hàm</title>
      <link>https://huyentrang-3331.github.io/MyWebBlog/blog/02-closure-trong-javascript/</link>
      <pubDate>Wed, 10 Sep 2025 00:00:00 +0000</pubDate>
      <guid>https://huyentrang-3331.github.io/MyWebBlog/blog/02-closure-trong-javascript/</guid>
      <description>Closure là khái niệm cốt lõi trong JavaScript, giúp hàm có thể nhớ biến bên ngoài ngay cả khi hàm cha đã kết thúc. Bài viết này giải thích chi tiết Closure, ứng dụng, lỗi thường gặp và ví dụ thực tế.</description>
    </item>
    <item>
      <title>Hiểu sâu về Event Loop trong JavaScript – Cơ chế bất đồng bộ mượt mà</title>
      <link>https://huyentrang-3331.github.io/MyWebBlog/blog/01-event-loop/</link>
      <pubDate>Fri, 05 Sep 2025 00:00:00 +0000</pubDate>
      <guid>https://huyentrang-3331.github.io/MyWebBlog/blog/01-event-loop/</guid>
      <description>Event Loop là trái tim của JavaScript – cơ chế giúp ngôn ngữ đơn luồng vẫn xử lý được bất đồng bộ. Bài viết này tổng hợp đầy đủ 10 phần: từ khái niệm, cơ chế hoạt động, Microtask &amp;amp; Macrotask, đến ví dụ thực tế và ứng dụng nâng cao.</description>
    </item>
  </channel>
</rss>
